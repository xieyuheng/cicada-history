;; Write a program that prints out the numbers 1 to 100 (inclusive).
;; If the number is divisible by 3,
;; print Crackle instead of the number.
;; If it's divisible by 5, print Pop.
;; If it's divisible by both 3 and 5, print CracklePop.

(= (crackle-pop)
   (crackle-pop-loop 1))

(= (crackle-pop-loop x)
   (println (num-crackle-pop x))
   (when (lt x 100)
     (crackle-pop-loop (add 1 x))))

(= (num-crackle-pop x)
   (cond [(eq 0 (mod x (mul 3 5))) 'CracklePop]
         [(eq 0 (mod x 3)) 'Crackle]
         [(eq 0 (mod x 5)) 'Pop]
         [else x]))

(crackle-pop)
