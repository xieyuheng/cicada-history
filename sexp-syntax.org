#+html_head: <link rel="stylesheet" href="css/org-page.css"/>
#+title: sexp-syntax

- sexp will be used as intermedium syntax to support a macro system.

* sexp

  #+begin_src cicada
  (: sexp-t type-tt)
  (= sexp-t (union string-t (list-t string-t)))
  #+end_src

* list

  #+begin_src cicada
  (: list-t type-tt)
  (= list-t
     (data :> [null-t cons-t]
       (: t type-tt)))

  (: null-t type-tt)
  (= null-t
     (data
       (: t type-tt)))

  (: cons-t type-tt)
  (= cons-t
     (data
       (: t type-tt)
       (: car t))
       (: cdr (list-t t)))

  (note
    example data construction
    (cons-c
      (= car zero-c)
      (= cdr null-c))
    (cons-c zero-c null-c))

  (: list-length (-- (list-t t) -> nat-t))
  (= list-length
     (lambda [list]
       (case list
         (null-t zero-c)
         (cons-t (succ-c (recur list.cdr))))))

  (: list-append (-- (list-t t) (list-t t) -> (list-t t)))
  (= list-append
     (lambda [ante succ]
       (case ante
         (null-t succ)
         (cons-t (cons-c ante.car (recur ante.cdr succ))))))
  #+end_src
